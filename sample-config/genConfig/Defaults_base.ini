# This file is used by $genDevConfig/util/genDevConfig v.3.0
#
# Place this file in the SNMPbooster configuration directory
# 
# Flapping, retry, soft/hard states make it so that time based calculations are
# not required.
# Time shifting, long term calculations and comparisons should be handled by the
# Graphite check plugin.

# For more information on genDevConfig: www.acktomic.com/
# For more information on triggers: www.shinken-monitoring/wiki/snmpBooster_triggers
# For more information on SNMPbooster: www.shinken-monitoring/wiki/snmpBooster


[TRIGGER]
    # Set service to UNKNOWN(3) by default
    default_status = 3
    
    [[interface_out]]
    # Utilise des fonctions (voir zabbix), Utilise RPN, Utilise les operateur (voir import operator), Error si == 1 
        warning = IfOutOctets.prct(),80,ge,IfAdminStatus.last(),1,eq,IfOperStatus.last(),1,eq,and_,and_
        critical = IfOutOctets.prct(),90,gt,IfOperStatus.last(),1,eq,and_

    [[interface_in]]
        warning = IfInOctets.prct(),80,gt,IfOperStatus.last(),1,eq,and_
        critical = IfInOctets.prct(),90,gt,IfOperStatus.last(),1,eq,and_

    [[file]]
        warning = FileSize.last(),1,gt
        critical = FileSize.last(),10,gt
        
    [[chassis_cpu]]
        warning = cpu5min.last(),85,gt
        critical = cpu5min.last(),95,gt
        
    [[chassis_mem]]
        warning = mem5minUsed.last(),processorRam.last(),div,100,mul,85,gt
        critical = mem5minUsed.last(),processorRam.last(),div,100,mul,95,gt
    
    [[saa_rtt]]
        warning = rrtMonLatestOperSense.last(),2,eq,rttMonLatestRttOperCompletionTime.last(),200,gt, or_
        critical = rttMonLatestRttOperCompletionTime.last(),400,gt

[TRIGGERGROUP]
   interface = interface_out,interface_in
   file = file

[DATASOURCE]
# #ds_type = DERIVE, COUNTER, GAUGE. TEXT 
# Limit pour : DERIVE, COUNTER,
# Text => Status OK ( fonction de recherche ( regexp ) ,A VOIR ... )

    ds_type = DERIVE
    ds_min  = 0

    OidSysDescr   = .1.3.6.1.2.1.1.1
    OidIfDescr    = .1.3.6.1.2.1.2.2.1.2
    OidIfSpeed    = .1.3.6.1.2.1.2.2.1.5
    OidIfAdminStatus     = .1.3.6.1.2.1.2.2.1.7
    OidIfOperStatus     = .1.3.6.1.2.1.2.2.1.8
    OidIfInOctets = .1.3.6.1.2.1.2.2.1.10
    OidIfOutOctets = .1.3.6.1.2.1.2.2.1.16
    OidFileName   = .1.3.6.1.4.1.2021.15.1.2
    OidFileSize   = .1.3.6.1.4.1.2021.15.1.3
    OidSysContact = .1.3.6.1.2.1.1.4
    OidSysName    = .1.3.6.1.2.1.1.5

    OidsysUptime =                           .1.3.6.1.2.1.1.3.0
    OidifNumber =                            .1.3.6.1.2.1.2.1.0
    OidifIndex =                             .1.3.6.1.2.1.2.2.1.1
    OidifDescr =                             .1.3.6.1.2.1.2.2.1.2
    OidifType =                              .1.3.6.1.2.1.2.2.1.3
    OidifMtu =                               .1.3.6.1.2.1.2.2.1.4
    OidifSpeed =                             .1.3.6.1.2.1.2.2.1.5
    OidifPhysAddress =                       .1.3.6.1.2.1.2.2.1.6
    OidifAdminStatus =                       .1.3.6.1.2.1.2.2.1.7
    OidifOperStatus =                        .1.3.6.1.2.1.2.2.1.8
    OidifLastChange =                        .1.3.6.1.2.1.2.2.1.9
    OidifInOctets =                          .1.3.6.1.2.1.2.2.1.10
    OidifInUcastPkts =                       .1.3.6.1.2.1.2.2.1.11
    OidifInNUcastPkts =                      .1.3.6.1.2.1.2.2.1.12
    OidifInDiscards =                        .1.3.6.1.2.1.2.2.1.13
    OidifInErrors =                          .1.3.6.1.2.1.2.2.1.14
    OidifInUnknownProtos =                   .1.3.6.1.2.1.2.2.1.15
    OidifOutOctets =                         .1.3.6.1.2.1.2.2.1.16
    OidifOutUcastPkts =                      .1.3.6.1.2.1.2.2.1.17
    OidifOutNUcastPkts =                     .1.3.6.1.2.1.2.2.1.18
    OidifOutDiscards =                       .1.3.6.1.2.1.2.2.1.19
    OidifOutErrors =                         .1.3.6.1.2.1.2.2.1.20
    OidifOutQLen =                           .1.3.6.1.2.1.2.2.1.21
    OidifHCInOctets =                        .1.3.6.1.2.1.31.1.1.1.6
    OidifHCInUcastPkts =                     .1.3.6.1.2.1.31.1.1.1.7
    OidifHCInMulticastPkts =                 .1.3.6.1.2.1.31.1.1.1.8
    OidifHCInBroadcastPkts =                 .1.3.6.1.2.1.31.1.1.1.9
    OidifHCOutOctets =                       .1.3.6.1.2.1.31.1.1.1.10
    OidifHCOutUcastPkts =                    .1.3.6.1.2.1.31.1.1.1.11
    OidifHCOutMulticastPkts =                .1.3.6.1.2.1.31.1.1.1.12
    OidifHCOutBroadcastPkts =                .1.3.6.1.2.1.31.1.1.1.13
    OidifAlias =                             .1.3.6.1.2.1.31.1.1.1.18
    OidipOutRequests =                       .1.3.6.1.2.1.4.10.0
    OidipForwDatagrams =                     .1.3.6.1.2.1.4.6.0

    # These are from the MIB2 ifmib.

    OidifName =                              .1.3.6.1.2.1.31.1.1.1.1

    # OIDs for Etherlike MIB devices

    Oiddot3StatsAlignmentErrors =            .1.3.6.1.2.1.10.7.2.1.2
    Oiddot3StatsFCSErrors =                  .1.3.6.1.2.1.10.7.2.1.3
    Oiddot3StatsSingleCollisionFrames =      .1.3.6.1.2.1.10.7.2.1.4
    OidOiddot3StatsMultipleCollisionFrames =    .1.3.6.1.2.1.10.7.2.1.5
    Oiddot3StatsDeferredTransmissions =      .1.3.6.1.2.1.10.7.2.1.7
    Oiddot3StatsLateCollisions =             .1.3.6.1.2.1.10.7.2.1.8
    Oiddot3StatsExcessiveCollisions =        .1.3.6.1.2.1.10.7.2.1.9
    Oiddot3StatsCarrierSenseErrors =         .1.3.6.1.2.1.10.7.2.1.11
    Oiddot3StatsFrameTooLongs =              .1.3.6.1.2.1.10.7.2.1.13
    Oiddot3StatsDuplexStatus =               .1.3.6.1.2.1.10.7.2.1.19
    ### ERS MIB
    # no availablemem .1.3.6.1.4.1.45.1.6.3.8.1.1.13.3
    # no cpusage .1.3.6.1.4.1.45.1.6.3.8.1.1.5.3
    # no temperature .1.3.6.1.4.1.45.1.6.3.7.1.1.5.5
    # no totalmem .1.3.6.1.4.1.45.1.6.3.8.1.1.12.3
    
    # Available on ES-470 instance 3.5.0
    
    Oids5ChasUtilMemoryAvailable         = .1.3.6.1.4.1.45.1.6.3.8.1.1.9
    Oids5ChasUtilMemoryMinAvailable      = .1.3.6.1.4.1.45.1.6.3.8.1.1.10
    OidFanOperState                      = .1.3.6.1.4.1.45.1.6.3.3.1.1.10.6
    OidPowerOperState                    = .1.3.6.1.4.1.45.1.6.3.3.1.1.10.4
    
    ### ERS 3K, 4K, 5K specific
    
    OidchassisStatus                     = .1.3.6.1.4.1.45.1.6.3.3.1.1.10.8
    
    #### Nortel Passport/ERS-1600/8600 specific OIDs
    
    ### Rapidcity-MIB
    
    OidrcSysVersion                      = .1.3.6.1.4.1.2272.1.1.7
    OidrcSysBufferUtil                   = .1.3.6.1.4.1.2272.1.1.13
    OidrcSysBufferPeak                   = .1.3.6.1.4.1.2272.1.1.14
    OidrcSysCpuUtil                      = .1.3.6.1.4.1.2272.1.1.20
    OidrcSysSwitchFabricUtil             = .1.3.6.1.4.1.2272.1.1.21
    
    OidrcChasFanOperStatus               = .1.3.6.1.4.1.2272.1.4.7.1.1.2
    OidrcChasFanAmbientTemp              = .1.3.6.1.4.1.2272.1.4.7.1.1.3
    OidrcChasPowerSupplyOperStatus       = .1.3.6.1.4.1.2272.1.4.8.1.1.2
    
    OidrcCardAdminStatus                 = .1.3.6.1.4.1.2272.1.4.9.1.1.5
    OidrcCardOperStatus                  = .1.3.6.1.4.1.2272.1.4.9.1.1.6
    
    ## PassportCardTable NEW
    
    OidcardTableStatus                      = .1.3.6.1.4.1.2272.1.100.6.1.5
    
    ## Memory NEW
    
    Oidrc2kChassisTemperature            = .1.3.6.1.4.1.2272.1.100.1.2
    OidmemoryTotalBytes                  = .1.3.6.1.4.1.2272.1.1.46
    OidmemoryUtilKBytes                  = .1.3.6.1.4.1.2272.1.1.47
    OidmemoryFreeBytes                   = .1.3.6.1.4.1.2272.1.1.48
    
    
    
    ### RapidCity Nortel Passport Interface statistics
    
    OidrcStatFrameTooShort               = .1.3.6.1.4.1.2272.1.12.1.1.2
    OidrcStatBridgeInUnicastFrames       = .1.3.6.1.4.1.2272.1.12.1.1.3
    OidrcStatBridgeInMulticastFrames     = .1.3.6.1.4.1.2272.1.12.1.1.4
    OidrcStatBridgeInBroadcastFrames     = .1.3.6.1.4.1.2272.1.12.1.1.5
    OidrcStatBridgeInDiscards            = .1.3.6.1.4.1.2272.1.12.1.1.6
    OidrcStatBridgeOutUnicastFrames      = .1.3.6.1.4.1.2272.1.12.1.1.7
    OidrcStatBridgeOutMulitcastFrames    = .1.3.6.1.4.1.2272.1.12.1.1.8
    OidrcStatBridgeOutBroadcastFrames    = .1.3.6.1.4.1.2272.1.12.1.1.9
    OidrcStatRouteInUnicastFrames        = .1.3.6.1.4.1.2272.1.12.1.1.10
    OidrcStatRouteInMulticastFrames      = .1.3.6.1.4.1.2272.1.12.1.1.11
    OidrcStatRouteOutUnicastFrames       = .1.3.6.1.4.1.2272.1.12.1.1.12
    OidrcStatRouteOutMulticastFrames     = .1.3.6.1.4.1.2272.1.12.1.1.13
    OidrcStatRouteInDiscards             = .1.3.6.1.4.1.2272.1.12.1.1.14
    OidrcStatStgForwardTransitions       = .1.3.6.1.4.1.2272.1.12.1.1.15
    OidrcStatStgInConfigBpdu             = .1.3.6.1.4.1.2272.1.12.1.1.16
    OidrcStatStgInTcnBpdu                = .1.3.6.1.4.1.2272.1.12.1.1.17
    OidrcStatStgInBadBpdu                = .1.3.6.1.4.1.2272.1.12.1.1.18
    OidrcStatStgOutConfigBpdu            = .1.3.6.1.4.1.2272.1.12.1.1.19
    OidrcStatStgOutTcnBpdu               = .1.3.6.1.4.1.2272.1.12.1.1.20
    OidrcStatBridgeOutFrames             = .1.3.6.1.4.1.2272.1.12.1.1.21
    
    # T1 Controller OIDS from RFC1406
    # The number of Errored Seconds
    Oiddsx1CurrentESs =                      .1.3.6.1.2.1.10.18.7.1.2
    # The number of Severely Errored Seconds
    Oiddsx1CurrentSESs =                     .1.3.6.1.2.1.10.18.7.1.3
    # The number of Severely Errored Framing Seconds
    Oiddsx1CurrentSEFSs =                    .1.3.6.1.2.1.10.18.7.1.4
    # The number of Unavailable Seconds
    Oiddsx1CurrentUASs =                     .1.3.6.1.2.1.10.18.7.1.5
    # The number of Controlled Slip Seconds
    Oiddsx1CurrentCSSs =                     .1.3.6.1.2.1.10.18.7.1.6
    # The number of Path Coding Violations
    Oiddsx1CurrentPCVs =                     .1.3.6.1.2.1.10.18.7.1.7
    # The number of Line Errored Seconds
    Oiddsx1CurrentLESs =                     .1.3.6.1.2.1.10.18.7.1.8
    # The number of Bursty Errored Seconds
    Oiddsx1CurrentBESs =                     .1.3.6.1.2.1.10.18.7.1.9
    # The number of Degraded Minutes
    Oiddsx1CurrentDMs =                      .1.3.6.1.2.1.10.18.7.1.10
    # The number of Line Code Violations
    Oiddsx1CurrentLCVs =                     .1.3.6.1.2.1.10.18.7.1.11
    # The system uptime
    OidsysUpTimeInstance =                   .1.3.6.1.2.1.1.3.0


###############################################################################
#
# Datasources define the type of data and the period of the data retrieved
#
###############################################################################


    [[sysUpTimeInstance]]
        ds_type = COUNTER
        ds_oid = $OidsysUpTimeInstance
    [[FileSize]]
        ds_type = GAUGE
        ds_unit = KB
        ds_oid  = $OidFileSize.%(instance)s
    [[ifInOctets]]
        ds_name = in
        ds_unit = Kbps
        ds_calc = 8,mul,1000,div
        # in=252352.4Kbps;;;0;100000
        ds_oid = $OidifInOctets.%(instance)s

    [[ifOutOctets]]
        ds_name = out
        ds_unit = Kbps
        ds_calc = 8,mul,1000,div
        # out=252352.4Kbps;;;0;100000
        ds_oid = $OidifOutOctets.%(instance)s

    [[ipForwDatagrams]]
        ds_oid = $OidipForwDatagrams
    [[ipOutRequests]]
        ds_oid = $OidipOutRequests


    [[dot3StatsAlignmentErrors]]
        ds_oid = $Oiddot3StatsAlignmentErrors.%(instance)s
    [[dot3StatsFCSErrors]]
        ds_oid = $Oiddot3StatsFCSErrors.%(instance)s
    [[dot3StatsSingleCollisionFrames]]
        ds_oid = $Oiddot3StatsSingleCollisionFrames.%(instance)s
    [[dot3StatsMultipleCollisionFrames]]
        ds_oid = $Oiddot3StatsMultipleCollisionFrames.%(instance)s
    [[dot3StatsDeferredTransmissions]]
        ds_oid = $Oiddot3StatsDeferredTransmissions.%(instance)s
    [[dot3StatsLateCollisions]]
        ds_oid = $Oiddot3StatsLateCollisions.%(instance)s
    [[dot3StatsExcessiveCollisions]]
        ds_oid = $Oiddot3StatsExcessiveCollisions.%(instance)s
    [[dot3StatsCarrierSenseErrors]]
        ds_oid = $Oiddot3StatsCarrierSenseErrors.%(instance)s
    [[dot3StatsFrameTooLongs]]
        ds_oid = $Oiddot3StatsFrameTooLongs.%(instance)s
    
    [[ifInErrors]]
        ds_oid = $OidifInErrors.%(instance)s
    [[ifOutErrors]]
        ds_oid = $OidifOutErrors.%(instance)s
    [[ifInUcastPackets]]
        ds_oid = $OidifInUcastPkts.%(instance)s
    [[ifOutUcastPackets]]
        ds_oid = $OidifOutUcastPkts.%(instance)s
    [[ifInNUcastPackets]]
        ds_oid = $OidifInNUcastPkts.%(instance)s
    [[ifOutNUcastPackets]]
        ds_oid = $OidifOutNUcastPkts.%(instance)s
    [[ifInDiscards]]
        ds_oid = $OidifInDiscards.%(instance)s
    [[ifOutDiscards]]
        ds_oid = $OidifOutDiscards.%(instance)s
    [[ifOutQLen]]
        ds_oid = $OidifOutQLen.%inst
    
    # High capacity counters. These require SNMPv2.
    
    [[ifHCInOctets]]
        ds_name = in
        ds_unit = Mbps
        ds_calc = 8,mul,1000000,div
        ds_type = DERIVE64
        ds_oid = $OidifHCInOctets.%(instance)s
    [[ifHCInUcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCInUcastPkts.%(instance)s
    [[ifHCInMulticastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCInMulticastPkts.%(instance)s
    [[ifHCInBroadcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCInBroadcastPkts.%(instance)s
    
    
    [[ifHCOutOctets]]
        ds_max = $OidifSpeed
        ds_name = out
        ds_unit = Mbps
        ds_calc = 8,mul,1000000,div
        ds_type = DERIVE64
        ds_oid = $OidifHCOutOctets.%(instance)s
    [[ifHCOutUcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCOutUcastPkts.%(instance)s
    [[ifHCOutMulticastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCOutMulticastPkts.%(instance)s
    [[ifHCOutBroadcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCOutBroadcastPkts.%(instance)s
    
    # Datasources for T1 controllers
    [[dsx1CurrentESs]]
        ds_oid = $Oiddsx1CurrentESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentSESs]]
        ds_oid = $Oiddsx1CurrentSESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentSEFSs]]
        ds_oid = $Oiddsx1CurrentSEFSs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentUASs]]
        ds_oid = $Oiddsx1CurrentUASs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentCSSs]]
        ds_oid = $Oiddsx1CurrentCSSs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentPCVs]]
        ds_oid = $Oiddsx1CurrentPCVs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentLESs]]
        ds_oid = $Oiddsx1CurrentLESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentBESs]]
        ds_oid = $Oiddsx1CurrentBESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentDMs]]
        ds_oid = $Oiddsx1CurrentDMs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentLCVs]]
        ds_oid = $Oiddsx1CurrentLCVs.%(instance)s
        ds_type = GAUGE
   
    [[rcSysBufferUtil]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidrcSysBufferUtil.%(instance)s
    [[rcSysCpuUtil]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidrcSysCpuUtil.%(instance)s
    [[rcSysSwitchFabricUtil]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidrcSysSwitchFabricUtil.%(instance)s
    
    [[s5ChasUtilMemoryAvailable]]
        ds_type	= 	GAUGE
        ds_oid	=	$Oids5ChasUtilMemoryAvailable.%(instance)s
    [[s5ChasUtilMemoryMinAvailable]]
        ds_type	= 	GAUGE
        ds_oid	=	$Oids5ChasUtilMemoryMinAvailable.%(instance)s
    [[FanOperState]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidFanOperState.%(instance)s
    [[PowerOperState]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidPowerOperState.%(instance)s
    
    [[chassisStatus]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidchassisStatus.%(instance)s
    [[rcChasFanOperStatus]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidrcChasFanOperStatus.%(instance)s    
    [[rcChasPowerSupplyOperStatus]]
        ds_type	= 	GAUGE
        ds_oid  =       $OidrcChasPowerSupplyOperStatus.%(instance)s    
    ## Memory NEW
    
    [[ChassisTemperature]]
        ds_type	= 	GAUGE
        ds_oid	=	$Oidrc2kChassisTemperature.%(instance)s
    [[memoryTotalBytes]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidmemoryTotalBytes.%(instance)s
    [[memoryUtilKBytes]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidmemoryUtilKBytes.%(instance)s
    [[memoryFreeBytes]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidmemoryFreeBytes.%(instance)s
            
    ## PassportCardTable NEW
    
    [[cardTableStatus]]
        ds_type	= 	GAUGE
        ds_oid	=	$OidcardTableStatus.%(instance)s


    [[sysContact]]
        ds_type = TEXT
        ds_oid  = $OidSysContact.0

    [[sysName]]
        ds_type = TEXT
        ds_oid  = $OidSysName.0

    [[SysDescr]]
        ds_type = TEXT
        ds_oid  = $OidSysDescr.0

    [[IfAdminStatus]]
        ds_type = GAUGE
        ds_oid  = $OidIfAdminStatus.%(instance)s

    [[IfOperStatus]]
        ds_type = GAUGE
        ds_oid  = $OidIfOperStatus.%(instance)s

    [[IfOutOctets]]
        ds_type = DERIVE
        ds_max  = 100000
        ds_min  = 0
        ds_limit = 4294967295
        ds_unit = Kbps
        ds_name = out
# out=252352.4Kbps;;;0;100000
        ds_calc = 8,mul,1000,div
        ds_oid  = $OidIfOutOctets.%(instance)s

    [[IfInOctets]]
        ds_type = DERIVE
        ds_max  = 100000
        ds_min  = 0
        ds_limit = 4294967295
        ds_unit = Kbps
        ds_name = in
        ds_calc = 8,mul,1000,div
        ds_oid  = $OidIfInOctets.%(instance)s



[MAP]
    [[interface-name]]
        base_oid = .1.3.6.1.2.1.2.2.1.2
    [[files]]
        base_oid = .1.3.6.1.2.1.2.2.1.2

[DSTEMPLATE]

    # Default values inherited by all device definitions
    ds = ""
    graph = ""

    [[Device-Traffic]]
        ds = ipForwDatagrams,ipOutRequests
        graph = "traffic: ipForwDatagrams ipOutRequests"
    
    # Generic Device
    
    [[Generic-Device]]
        ds    = SysDescr    
    ### Interface target types.
    
    [[standard-interface]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors, ifOutErrors, ifInUcastPackets, ifOutUcastPackets"""
      #  graph        = 	"""Octets: ifInOctets ifOutOctets,
      #  UcastPackets: ifInUcastPackets ifOutUcastPackets,
      #  Errors: ifInErrors ifOutErrors"""
    
    [[extended-interface]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors ifInDiscards ifOutDiscards,
        Error Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    [[extended-interface-nu]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets,
        ifInNUcastPackets, ifOutNUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        NUcastPackets: ifInNUcastPackets ifOutNUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors ifInDiscards ifOutDiscards,
        Error Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    
    [[extended-interface-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPackets, ifHCOutUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors
        Error Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    
    [[extended-interface-nu-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPackets, ifHCOutUcastPackets,
        ifHCInNUcastPackets, ifHCOutNUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        NUcastPackets: ifHCInNUcastPackets ifHCOutNUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames
        dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors ifInDiscards ifOutDiscards,
        Errors Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    
    [[standard-interface-nu]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets,
        ifInNUcastPackets, ifOutNUcastPackets"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        NUcastPackets: ifInNUcastPackets ifOutNUcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[standard-interface-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPkts, ifHCOutUcastPkts"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[standard-interface-nu-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPkts, ifHCOutUcastPkts,
        ifHCInMulticastPkts, ifHCInMulticastPkts,
        ifHCInBroadcastPkts, ifHCInBroadcastPkts"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        McastPackets: ifHCInMulticastPackets ifHCOutMulticastPackets,
        BcastPackets: ifHCInBroadcastPackets ifHCOutBroadcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[sub-interface]]
        ds = "ifInOctets, ifOutOctets"
        graph = "Octets: ifInOctets ifOutOctets"
    
    [[sub-interface-hc]]
        ds = "ifHCInOctets, ifHCOutOctets"
        graph = "Octets: ifHCInOctets ifHCOutOctets"
    
    [[dsx-controller]]
        ds          = 	"""dsx1CurrentESs, dsx1CurrentSESs, dsx1CurrentSEFSs,
        dsx1CurrentUASs, dsx1CurrentCSSs, dsx1CurrentPCVs,
        dsx1CurrentLESs, dsx1CurrentBESs, dsx1CurrentDMs, dsx1CurrentLCVs"""
        graph        = 	"""Errors: dsx1CurrentPCVs dsx1CurrentLCVs,
        Line: dsx1CurrentLCVs dsx1CurrentLESs,
        ErroredSec: dsx1CurrentESs dsx1CurrentSESs dsx1CurrentSEFSs
        dsx1CurrentCSSs dsx1CurrentBESs,
        Service: dsx1CurrentUASs dsx1CurrentDMs"""
    [[interface]]
        ds = IfOutOctets,IfInOctets,IfAdminStatus,IfOperStatus
    [[file]]                                                                                                      
        ds = FileSize

